services:
  mongodb:
    image: mongo:6.0
    container_name: jewellery_mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: jewellery-app
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - jewellery-network

  backend:
    build: ./backend
    container_name: jewellery_backend
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - PORT=5000
      - MONGODB_URI=${MONGODB_URI}
      - JWT_SECRET=${JWT_SECRET}
      - EMAIL_USER=${EMAIL_USER}
      - EMAIL_PASS=${EMAIL_PASS}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - CLIENT_URL=${CLIENT_URL}
      - ADMIN_URL=${ADMIN_URL}
      - CLOUDINARY_CLOUD_NAME=${CLOUDINARY_CLOUD_NAME}
      - CLOUDINARY_API_KEY=${CLOUDINARY_API_KEY}
      - CLOUDINARY_API_SECRET=${CLOUDINARY_API_SECRET}
    ports:
      - "5000:5000"
    depends_on:
      - mongodb
    volumes:
      - backend_uploads:/app/uploads
    networks:
      - jewellery-network

  frontend:
    build: ./frontend
    container_name: jewellery_frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - jewellery-network

  admin-dashboard:
    build: ./admin-dashboard
    container_name: jewellery_admin_dashboard
    restart: unless-stopped
    ports:
      - "3001:3001"
    depends_on:
      - backend
    networks:
      - jewellery-network

volumes:
  mongodb_data:
  backend_uploads:

networks:
  jewellery-network:
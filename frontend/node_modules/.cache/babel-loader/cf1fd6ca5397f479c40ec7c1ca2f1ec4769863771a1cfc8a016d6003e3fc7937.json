{"ast":null,"code":"// import React from 'react';\n// import { Container, Table, Button, Row, Col } from 'react-bootstrap';\n\n// function Cart() {\n//   // This is a placeholder - you'll need to implement cart state management\n//   const cartItems = [];\n\n//   const getTotal = () => {\n//     return cartItems.reduce((total, item) => total + (item.price * item.quantity), 0);\n//   };\n\n//   if (cartItems.length === 0) {\n//     return (\n//       <Container className=\"my-4\">\n//         <h2>Your Cart</h2>\n//         <p>Your cart is empty</p>\n//       </Container>\n//     );\n//   }\n\n//   return (\n//     <Container className=\"my-4\">\n//       <h2>Your Cart</h2>\n//       <Table striped bordered hover>\n//         <thead>\n//           <tr>\n//             <th>Product</th>\n//             <th>Price</th>\n//             <th>Quantity</th>\n//             <th>Total</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {cartItems.map(item => (\n//             <tr key={item.id}>\n//               <td>{item.name}</td>\n//               <td>${item.price}</td>\n//               <td>{item.quantity}</td>\n//               <td>${(item.price * item.quantity).toFixed(2)}</td>\n//             </tr>\n//           ))}\n//         </tbody>\n//         <tfoot>\n//           <tr>\n//             <td colSpan={3} className=\"text-end\"><strong>Total:</strong></td>\n//             <td><strong>${getTotal().toFixed(2)}</strong></td>\n//           </tr>\n//         </tfoot>\n//       </Table>\n//       <Row>\n//         <Col className=\"text-end\">\n//           <Button variant=\"primary\">Checkout</Button>\n//         </Col>\n//       </Row>\n//     </Container>\n//   );\n// }\n\n// export default Cart;","map":{"version":3,"names":[],"sources":["D:/MERNSTACK/jewellery-app/frontend/src/pages/Cart.js"],"sourcesContent":["// import React from 'react';\r\n// import { Container, Table, Button, Row, Col } from 'react-bootstrap';\r\n\r\n// function Cart() {\r\n//   // This is a placeholder - you'll need to implement cart state management\r\n//   const cartItems = [];\r\n\r\n//   const getTotal = () => {\r\n//     return cartItems.reduce((total, item) => total + (item.price * item.quantity), 0);\r\n//   };\r\n\r\n//   if (cartItems.length === 0) {\r\n//     return (\r\n//       <Container className=\"my-4\">\r\n//         <h2>Your Cart</h2>\r\n//         <p>Your cart is empty</p>\r\n//       </Container>\r\n//     );\r\n//   }\r\n\r\n//   return (\r\n//     <Container className=\"my-4\">\r\n//       <h2>Your Cart</h2>\r\n//       <Table striped bordered hover>\r\n//         <thead>\r\n//           <tr>\r\n//             <th>Product</th>\r\n//             <th>Price</th>\r\n//             <th>Quantity</th>\r\n//             <th>Total</th>\r\n//           </tr>\r\n//         </thead>\r\n//         <tbody>\r\n//           {cartItems.map(item => (\r\n//             <tr key={item.id}>\r\n//               <td>{item.name}</td>\r\n//               <td>${item.price}</td>\r\n//               <td>{item.quantity}</td>\r\n//               <td>${(item.price * item.quantity).toFixed(2)}</td>\r\n//             </tr>\r\n//           ))}\r\n//         </tbody>\r\n//         <tfoot>\r\n//           <tr>\r\n//             <td colSpan={3} className=\"text-end\"><strong>Total:</strong></td>\r\n//             <td><strong>${getTotal().toFixed(2)}</strong></td>\r\n//           </tr>\r\n//         </tfoot>\r\n//       </Table>\r\n//       <Row>\r\n//         <Col className=\"text-end\">\r\n//           <Button variant=\"primary\">Checkout</Button>\r\n//         </Col>\r\n//       </Row>\r\n//     </Container>\r\n//   );\r\n// }\r\n\r\n// export default Cart;"],"mappings":"AAAA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
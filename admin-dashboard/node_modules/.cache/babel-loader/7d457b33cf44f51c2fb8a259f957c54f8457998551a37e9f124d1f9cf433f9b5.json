{"ast":null,"code":"\n\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n\n// function Products() {\n//   const [products, setProducts] = useState([]);\n//   const [showModal, setShowModal] = useState(false);\n//   const [editingProduct, setEditingProduct] = useState(null);\n//   const [formData, setFormData] = useState({\n//     name: '',\n//     price: '',\n//     description: '',\n//     images: [{ url: '', public_id: '' }],\n//     category: 'rings',\n//     stock: 0,\n//     featured: false,\n//     material: 'other'\n//   });\n//   const [loading, setLoading] = useState(true);\n//   const [error, setError] = useState('');\n\n//   useEffect(() => {\n//     fetchProducts();\n//   }, []);\n\n//   const fetchProducts = async () => {\n//     try {\n//       const response = await axios.get('/api/admin/products');\n//       setProducts(response.data.products);\n//     } catch (error) {\n//       console.error('Error fetching products:', error);\n//       setError('Failed to fetch products');\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     try {\n//       if (editingProduct) {\n//         await axios.put(`/api/admin/products/${editingProduct._id}`, formData);\n//       } else {\n//         await axios.post('/api/admin/products', formData);\n//       }\n//       setShowModal(false);\n//       setEditingProduct(null);\n//       setFormData({\n//         name: '',\n//         price: '',\n//         description: '',\n//         images: [{ url: '', public_id: '' }],\n//         category: 'rings',\n//         stock: 0,\n//         featured: false,\n//         material: 'other'\n//       });\n//       fetchProducts();\n//     } catch (error) {\n//       setError('Failed to save product');\n//     }\n//   };\n\n//   const handleEdit = (product) => {\n//     setEditingProduct(product);\n//     setFormData({\n//       name: product.name,\n//       price: product.price,\n//       description: product.description,\n//       images: product.images,\n//       category: product.category,\n//       stock: product.stock,\n//       featured: product.featured,\n//       material: product.material\n//     });\n//     setShowModal(true);\n//   };\n\n//   const handleDelete = async (id) => {\n//     if (window.confirm('Are you sure you want to delete this product?')) {\n//       try {\n//         await axios.delete(`/api/admin/products/${id}`);\n//         fetchProducts();\n//       } catch (error) {\n//         setError('Failed to delete product');\n//       }\n//     }\n//   };\n\n//   const addImageField = () => {\n//     setFormData({\n//       ...formData,\n//       images: [...formData.images, { url: '', public_id: '' }]\n//     });\n//   };\n\n//   const updateImageField = (index, field, value) => {\n//     const updatedImages = formData.images.map((image, i) => \n//       i === index ? { ...image, [field]: value } : image\n//     );\n//     setFormData({ ...formData, images: updatedImages });\n//   };\n\n//   if (loading) {\n//     return (\n//       <div className=\"flex items-center justify-center h-64\">\n//         <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600\"></div>\n//       </div>\n//     );\n//   }\n\n//   return (\n//     <div className=\"p-6\">\n//       <div className=\"flex justify-between items-center mb-6\">\n//         <h1 className=\"text-2xl font-bold text-gray-900\">Products Management</h1>\n//         <button\n//           onClick={() => setShowModal(true)}\n//           className=\"bg-gradient-to-r from-blue-600 to-purple-600 text-white px-4 py-2 rounded-lg hover:from-blue-700 hover:to-purple-700 transition duration-200\"\n//         >\n//           Add New Product\n//         </button>\n//       </div>\n\n//       {error && (\n//         <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-4\">\n//           {error}\n//         </div>\n//       )}\n\n//       <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n//         {products.map(product => (\n//           <div key={product._id} className=\"bg-white rounded-xl shadow-sm overflow-hidden hover:shadow-md transition duration-200\">\n//             <img \n//               src={product.images?.[0]?.url || '/api/placeholder/300/200'} \n//               alt={product.name}\n//               className=\"w-full h-48 object-cover\"\n//             />\n//             <div className=\"p-4\">\n//               <div className=\"flex justify-between items-start mb-2\">\n//                 <h3 className=\"text-lg font-semibold text-gray-900\">{product.name}</h3>\n//                 <span className={`text-xs px-2 py-1 rounded-full ${\n//                   product.stock > 0 ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'\n//                 }`}>\n//                   {product.stock} in stock\n//                 </span>\n//               </div>\n//               <p className=\"text-gray-600 text-sm mb-3 line-clamp-2\">{product.description}</p>\n//               <div className=\"flex justify-between items-center\">\n//                 <span className=\"text-xl font-bold text-blue-600\">${product.price}</span>\n//                 <div className=\"space-x-2\">\n//                   <button\n//                     onClick={() => handleEdit(product)}\n//                     className=\"text-blue-600 hover:text-blue-900 text-sm font-medium\"\n//                   >\n//                     Edit\n//                   </button>\n//                   <button\n//                     onClick={() => handleDelete(product._id)}\n//                     className=\"text-red-600 hover:text-red-900 text-sm font-medium\"\n//                   >\n//                     Delete\n//                   </button>\n//                 </div>\n//               </div>\n//             </div>\n//           </div>\n//         ))}\n//       </div>\n\n//       {products.length === 0 && !loading && (\n//         <div className=\"text-center py-12\">\n//           <p className=\"text-gray-600\">No products found. Add your first product!</p>\n//         </div>\n//       )}\n\n//       {/* Modal */}\n//       {showModal && (\n//         <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50\">\n//           <div className=\"bg-white rounded-xl shadow-2xl max-w-2xl w-full max-h-screen overflow-y-auto\">\n//             <div className=\"p-6\">\n//               <h2 className=\"text-xl font-bold mb-4\">\n//                 {editingProduct ? 'Edit Product' : 'Add New Product'}\n//               </h2>\n\n//               <form onSubmit={handleSubmit} className=\"space-y-4\">\n//                 <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n//                   <div>\n//                     <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n//                       Product Name\n//                     </label>\n//                     <input\n//                       type=\"text\"\n//                       value={formData.name}\n//                       onChange={(e) => setFormData({...formData, name: e.target.value})}\n//                       className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n//                       required\n//                     />\n//                   </div>\n\n//                   <div>\n//                     <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n//                       Price\n//                     </label>\n//                     <input\n//                       type=\"number\"\n//                       step=\"0.01\"\n//                       value={formData.price}\n//                       onChange={(e) => setFormData({...formData, price: e.target.value})}\n//                       className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n//                       required\n//                     />\n//                   </div>\n//                 </div>\n\n//                 <div>\n//                   <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n//                     Description\n//                   </label>\n//                   <textarea\n//                     value={formData.description}\n//                     onChange={(e) => setFormData({...formData, description: e.target.value})}\n//                     rows={3}\n//                     className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n//                     required\n//                   />\n//                 </div>\n\n//                 <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n//                   <div>\n//                     <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n//                       Category\n//                     </label>\n//                     <select\n//                       value={formData.category}\n//                       onChange={(e) => setFormData({...formData, category: e.target.value})}\n//                       className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n//                     >\n//                       <option value=\"rings\">Rings</option>\n//                       <option value=\"necklaces\">Necklaces</option>\n//                       <option value=\"earrings\">Earrings</option>\n//                       <option value=\"bracelets\">Bracelets</option>\n//                       <option value=\"other\">Other</option>\n//                     </select>\n//                   </div>\n\n//                   <div>\n//                     <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n//                       Stock\n//                     </label>\n//                     <input\n//                       type=\"number\"\n//                       value={formData.stock}\n//                       onChange={(e) => setFormData({...formData, stock: parseInt(e.target.value)})}\n//                       className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n//                       required\n//                     />\n//                   </div>\n\n//                   <div>\n//                     <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n//                       Material\n//                     </label>\n//                     <select\n//                       value={formData.material}\n//                       onChange={(e) => setFormData({...formData, material: e.target.value})}\n//                       className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n//                     >\n//                       <option value=\"gold\">Gold</option>\n//                       <option value=\"silver\">Silver</option>\n//                       <option value=\"platinum\">Platinum</option>\n//                       <option value=\"diamond\">Diamond</option>\n//                       <option value=\"other\">Other</option>\n//                     </select>\n//                   </div>\n//                 </div>\n\n//                 <div>\n//                   <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n//                     Images\n//                   </label>\n//                   {formData.images.map((image, index) => (\n//                     <div key={index} className=\"flex space-x-2 mb-2\">\n//                       <input\n//                         type=\"url\"\n//                         placeholder=\"Image URL\"\n//                         value={image.url}\n//                         onChange={(e) => updateImageField(index, 'url', e.target.value)}\n//                         className=\"flex-1 px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n//                       />\n//                     </div>\n//                   ))}\n//                   <button\n//                     type=\"button\"\n//                     onClick={addImageField}\n//                     className=\"text-blue-600 text-sm font-medium\"\n//                   >\n//                     + Add another image\n//                   </button>\n//                 </div>\n\n//                 <div className=\"flex items-center\">\n//                   <input\n//                     type=\"checkbox\"\n//                     checked={formData.featured}\n//                     onChange={(e) => setFormData({...formData, featured: e.target.checked})}\n//                     className=\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded\"\n//                   />\n//                   <label className=\"ml-2 block text-sm text-gray-700\">\n//                     Featured Product\n//                   </label>\n//                 </div>\n\n//                 <div className=\"flex space-x-3 pt-4\">\n//                   <button\n//                     type=\"button\"\n//                     onClick={() => {\n//                       setShowModal(false);\n//                       setEditingProduct(null);\n//                       setFormData({\n//                         name: '',\n//                         price: '',\n//                         description: '',\n//                         images: [{ url: '', public_id: '' }],\n//                         category: 'rings',\n//                         stock: 0,\n//                         featured: false,\n//                         material: 'other'\n//                       });\n//                     }}\n//                     className=\"flex-1 px-4 py-2 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 transition duration-200\"\n//                   >\n//                     Cancel\n//                   </button>\n//                   <button\n//                     type=\"submit\"\n//                     className=\"flex-1 px-4 py-2 bg-gradient-to-r from-blue-600 to-purple-600 text-white rounded-lg hover:from-blue-700 hover:to-purple-700 transition duration-200\"\n//                   >\n//                     {editingProduct ? 'Update' : 'Create'} Product\n//                   </button>\n//                 </div>\n//               </form>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default Products;","map":{"version":3,"names":[],"sources":["D:/MERNSTACK/jewellery-app/admin-dashboard/src/pages/Products.js"],"sourcesContent":["\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import axios from 'axios';\r\n\r\n// function Products() {\r\n//   const [products, setProducts] = useState([]);\r\n//   const [showModal, setShowModal] = useState(false);\r\n//   const [editingProduct, setEditingProduct] = useState(null);\r\n//   const [formData, setFormData] = useState({\r\n//     name: '',\r\n//     price: '',\r\n//     description: '',\r\n//     images: [{ url: '', public_id: '' }],\r\n//     category: 'rings',\r\n//     stock: 0,\r\n//     featured: false,\r\n//     material: 'other'\r\n//   });\r\n//   const [loading, setLoading] = useState(true);\r\n//   const [error, setError] = useState('');\r\n\r\n//   useEffect(() => {\r\n//     fetchProducts();\r\n//   }, []);\r\n\r\n//   const fetchProducts = async () => {\r\n//     try {\r\n//       const response = await axios.get('/api/admin/products');\r\n//       setProducts(response.data.products);\r\n//     } catch (error) {\r\n//       console.error('Error fetching products:', error);\r\n//       setError('Failed to fetch products');\r\n//     } finally {\r\n//       setLoading(false);\r\n//     }\r\n//   };\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     try {\r\n//       if (editingProduct) {\r\n//         await axios.put(`/api/admin/products/${editingProduct._id}`, formData);\r\n//       } else {\r\n//         await axios.post('/api/admin/products', formData);\r\n//       }\r\n//       setShowModal(false);\r\n//       setEditingProduct(null);\r\n//       setFormData({\r\n//         name: '',\r\n//         price: '',\r\n//         description: '',\r\n//         images: [{ url: '', public_id: '' }],\r\n//         category: 'rings',\r\n//         stock: 0,\r\n//         featured: false,\r\n//         material: 'other'\r\n//       });\r\n//       fetchProducts();\r\n//     } catch (error) {\r\n//       setError('Failed to save product');\r\n//     }\r\n//   };\r\n\r\n//   const handleEdit = (product) => {\r\n//     setEditingProduct(product);\r\n//     setFormData({\r\n//       name: product.name,\r\n//       price: product.price,\r\n//       description: product.description,\r\n//       images: product.images,\r\n//       category: product.category,\r\n//       stock: product.stock,\r\n//       featured: product.featured,\r\n//       material: product.material\r\n//     });\r\n//     setShowModal(true);\r\n//   };\r\n\r\n//   const handleDelete = async (id) => {\r\n//     if (window.confirm('Are you sure you want to delete this product?')) {\r\n//       try {\r\n//         await axios.delete(`/api/admin/products/${id}`);\r\n//         fetchProducts();\r\n//       } catch (error) {\r\n//         setError('Failed to delete product');\r\n//       }\r\n//     }\r\n//   };\r\n\r\n//   const addImageField = () => {\r\n//     setFormData({\r\n//       ...formData,\r\n//       images: [...formData.images, { url: '', public_id: '' }]\r\n//     });\r\n//   };\r\n\r\n//   const updateImageField = (index, field, value) => {\r\n//     const updatedImages = formData.images.map((image, i) => \r\n//       i === index ? { ...image, [field]: value } : image\r\n//     );\r\n//     setFormData({ ...formData, images: updatedImages });\r\n//   };\r\n\r\n//   if (loading) {\r\n//     return (\r\n//       <div className=\"flex items-center justify-center h-64\">\r\n//         <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600\"></div>\r\n//       </div>\r\n//     );\r\n//   }\r\n\r\n//   return (\r\n//     <div className=\"p-6\">\r\n//       <div className=\"flex justify-between items-center mb-6\">\r\n//         <h1 className=\"text-2xl font-bold text-gray-900\">Products Management</h1>\r\n//         <button\r\n//           onClick={() => setShowModal(true)}\r\n//           className=\"bg-gradient-to-r from-blue-600 to-purple-600 text-white px-4 py-2 rounded-lg hover:from-blue-700 hover:to-purple-700 transition duration-200\"\r\n//         >\r\n//           Add New Product\r\n//         </button>\r\n//       </div>\r\n\r\n//       {error && (\r\n//         <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-4\">\r\n//           {error}\r\n//         </div>\r\n//       )}\r\n\r\n//       <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n//         {products.map(product => (\r\n//           <div key={product._id} className=\"bg-white rounded-xl shadow-sm overflow-hidden hover:shadow-md transition duration-200\">\r\n//             <img \r\n//               src={product.images?.[0]?.url || '/api/placeholder/300/200'} \r\n//               alt={product.name}\r\n//               className=\"w-full h-48 object-cover\"\r\n//             />\r\n//             <div className=\"p-4\">\r\n//               <div className=\"flex justify-between items-start mb-2\">\r\n//                 <h3 className=\"text-lg font-semibold text-gray-900\">{product.name}</h3>\r\n//                 <span className={`text-xs px-2 py-1 rounded-full ${\r\n//                   product.stock > 0 ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'\r\n//                 }`}>\r\n//                   {product.stock} in stock\r\n//                 </span>\r\n//               </div>\r\n//               <p className=\"text-gray-600 text-sm mb-3 line-clamp-2\">{product.description}</p>\r\n//               <div className=\"flex justify-between items-center\">\r\n//                 <span className=\"text-xl font-bold text-blue-600\">${product.price}</span>\r\n//                 <div className=\"space-x-2\">\r\n//                   <button\r\n//                     onClick={() => handleEdit(product)}\r\n//                     className=\"text-blue-600 hover:text-blue-900 text-sm font-medium\"\r\n//                   >\r\n//                     Edit\r\n//                   </button>\r\n//                   <button\r\n//                     onClick={() => handleDelete(product._id)}\r\n//                     className=\"text-red-600 hover:text-red-900 text-sm font-medium\"\r\n//                   >\r\n//                     Delete\r\n//                   </button>\r\n//                 </div>\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n//         ))}\r\n//       </div>\r\n\r\n//       {products.length === 0 && !loading && (\r\n//         <div className=\"text-center py-12\">\r\n//           <p className=\"text-gray-600\">No products found. Add your first product!</p>\r\n//         </div>\r\n//       )}\r\n\r\n//       {/* Modal */}\r\n//       {showModal && (\r\n//         <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50\">\r\n//           <div className=\"bg-white rounded-xl shadow-2xl max-w-2xl w-full max-h-screen overflow-y-auto\">\r\n//             <div className=\"p-6\">\r\n//               <h2 className=\"text-xl font-bold mb-4\">\r\n//                 {editingProduct ? 'Edit Product' : 'Add New Product'}\r\n//               </h2>\r\n              \r\n//               <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n//                 <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n//                   <div>\r\n//                     <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n//                       Product Name\r\n//                     </label>\r\n//                     <input\r\n//                       type=\"text\"\r\n//                       value={formData.name}\r\n//                       onChange={(e) => setFormData({...formData, name: e.target.value})}\r\n//                       className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\r\n//                       required\r\n//                     />\r\n//                   </div>\r\n                  \r\n//                   <div>\r\n//                     <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n//                       Price\r\n//                     </label>\r\n//                     <input\r\n//                       type=\"number\"\r\n//                       step=\"0.01\"\r\n//                       value={formData.price}\r\n//                       onChange={(e) => setFormData({...formData, price: e.target.value})}\r\n//                       className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\r\n//                       required\r\n//                     />\r\n//                   </div>\r\n//                 </div>\r\n\r\n//                 <div>\r\n//                   <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n//                     Description\r\n//                   </label>\r\n//                   <textarea\r\n//                     value={formData.description}\r\n//                     onChange={(e) => setFormData({...formData, description: e.target.value})}\r\n//                     rows={3}\r\n//                     className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\r\n//                     required\r\n//                   />\r\n//                 </div>\r\n\r\n//                 <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n//                   <div>\r\n//                     <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n//                       Category\r\n//                     </label>\r\n//                     <select\r\n//                       value={formData.category}\r\n//                       onChange={(e) => setFormData({...formData, category: e.target.value})}\r\n//                       className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\r\n//                     >\r\n//                       <option value=\"rings\">Rings</option>\r\n//                       <option value=\"necklaces\">Necklaces</option>\r\n//                       <option value=\"earrings\">Earrings</option>\r\n//                       <option value=\"bracelets\">Bracelets</option>\r\n//                       <option value=\"other\">Other</option>\r\n//                     </select>\r\n//                   </div>\r\n\r\n//                   <div>\r\n//                     <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n//                       Stock\r\n//                     </label>\r\n//                     <input\r\n//                       type=\"number\"\r\n//                       value={formData.stock}\r\n//                       onChange={(e) => setFormData({...formData, stock: parseInt(e.target.value)})}\r\n//                       className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\r\n//                       required\r\n//                     />\r\n//                   </div>\r\n\r\n//                   <div>\r\n//                     <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n//                       Material\r\n//                     </label>\r\n//                     <select\r\n//                       value={formData.material}\r\n//                       onChange={(e) => setFormData({...formData, material: e.target.value})}\r\n//                       className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\r\n//                     >\r\n//                       <option value=\"gold\">Gold</option>\r\n//                       <option value=\"silver\">Silver</option>\r\n//                       <option value=\"platinum\">Platinum</option>\r\n//                       <option value=\"diamond\">Diamond</option>\r\n//                       <option value=\"other\">Other</option>\r\n//                     </select>\r\n//                   </div>\r\n//                 </div>\r\n\r\n//                 <div>\r\n//                   <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n//                     Images\r\n//                   </label>\r\n//                   {formData.images.map((image, index) => (\r\n//                     <div key={index} className=\"flex space-x-2 mb-2\">\r\n//                       <input\r\n//                         type=\"url\"\r\n//                         placeholder=\"Image URL\"\r\n//                         value={image.url}\r\n//                         onChange={(e) => updateImageField(index, 'url', e.target.value)}\r\n//                         className=\"flex-1 px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\r\n//                       />\r\n//                     </div>\r\n//                   ))}\r\n//                   <button\r\n//                     type=\"button\"\r\n//                     onClick={addImageField}\r\n//                     className=\"text-blue-600 text-sm font-medium\"\r\n//                   >\r\n//                     + Add another image\r\n//                   </button>\r\n//                 </div>\r\n\r\n//                 <div className=\"flex items-center\">\r\n//                   <input\r\n//                     type=\"checkbox\"\r\n//                     checked={formData.featured}\r\n//                     onChange={(e) => setFormData({...formData, featured: e.target.checked})}\r\n//                     className=\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded\"\r\n//                   />\r\n//                   <label className=\"ml-2 block text-sm text-gray-700\">\r\n//                     Featured Product\r\n//                   </label>\r\n//                 </div>\r\n\r\n//                 <div className=\"flex space-x-3 pt-4\">\r\n//                   <button\r\n//                     type=\"button\"\r\n//                     onClick={() => {\r\n//                       setShowModal(false);\r\n//                       setEditingProduct(null);\r\n//                       setFormData({\r\n//                         name: '',\r\n//                         price: '',\r\n//                         description: '',\r\n//                         images: [{ url: '', public_id: '' }],\r\n//                         category: 'rings',\r\n//                         stock: 0,\r\n//                         featured: false,\r\n//                         material: 'other'\r\n//                       });\r\n//                     }}\r\n//                     className=\"flex-1 px-4 py-2 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 transition duration-200\"\r\n//                   >\r\n//                     Cancel\r\n//                   </button>\r\n//                   <button\r\n//                     type=\"submit\"\r\n//                     className=\"flex-1 px-4 py-2 bg-gradient-to-r from-blue-600 to-purple-600 text-white rounded-lg hover:from-blue-700 hover:to-purple-700 transition duration-200\"\r\n//                   >\r\n//                     {editingProduct ? 'Update' : 'Create'} Product\r\n//                   </button>\r\n//                 </div>\r\n//               </form>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Products;"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"// import React, { useState, useEffect } from 'react';\n\n// function Products() {\n//   const [products, setProducts] = useState([]);\n//   const [showModal, setShowModal] = useState(false);\n//   const [editingProduct, setEditingProduct] = useState(null);\n//   const [formData, setFormData] = useState({\n//     name: '',\n//     price: '',\n//     description: '',\n//     image: '',\n//     category: ''\n//   });\n//   const [loading, setLoading] = useState(true);\n\n//   // Mock data - replace with actual API calls\n//   useEffect(() => {\n//     const mockProducts = [\n//       {\n//         _id: '1',\n//         name: 'Diamond Ring',\n//         price: 2999.99,\n//         description: 'Beautiful diamond engagement ring',\n//         image: 'https://images.unsplash.com/photo-1605100804763-247f67b3557e?w=150',\n//         category: 'Rings',\n//         stock: 15\n//       },\n//       {\n//         _id: '2',\n//         name: 'Gold Necklace',\n//         price: 1599.50,\n//         description: 'Elegant gold necklace',\n//         image: 'https://images.unsplash.com/photo-1599643478518-a784e5dc4c8f?w=150',\n//         category: 'Necklaces',\n//         stock: 8\n//       }\n//     ];\n\n//     setProducts(mockProducts);\n//     setLoading(false);\n//   }, []);\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     // Mock save - replace with actual API call\n//     if (editingProduct) {\n//       setProducts(products.map(p => p._id === editingProduct._id ? \n//         { ...formData, _id: editingProduct._id } : p));\n//     } else {\n//       const newProduct = { ...formData, _id: Date.now().toString() };\n//       setProducts([...products, newProduct]);\n//     }\n//     setShowModal(false);\n//     setEditingProduct(null);\n//     setFormData({ name: '', price: '', description: '', image: '', category: '' });\n//   };\n\n//   const handleEdit = (product) => {\n//     setEditingProduct(product);\n//     setFormData({\n//       name: product.name,\n//       price: product.price,\n//       description: product.description,\n//       image: product.image,\n//       category: product.category\n//     });\n//     setShowModal(true);\n//   };\n\n//   const handleDelete = async (id) => {\n//     if (window.confirm('Are you sure you want to delete this product?')) {\n//       setProducts(products.filter(p => p._id !== id));\n//     }\n//   };\n\n//   if (loading) {\n//     return (\n//       <div className=\"flex items-center justify-center h-64\">\n//         <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600\"></div>\n//       </div>\n//     );\n//   }\n\n//   return (\n//     <div className=\"p-6\">\n//       <div className=\"flex justify-between items-center mb-6\">\n//         <h1 className=\"text-2xl font-bold text-gray-900\">Products Management</h1>\n//         <button\n//           onClick={() => setShowModal(true)}\n//           className=\"bg-gradient-to-r from-blue-600 to-purple-600 text-white px-4 py-2 rounded-lg hover:from-blue-700 hover:to-purple-700 transition duration-200\"\n//         >\n//           Add New Product\n//         </button>\n//       </div>\n\n//       <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n//         {products.map(product => (\n//           <div key={product._id} className=\"bg-white rounded-xl shadow-sm overflow-hidden hover:shadow-md transition duration-200\">\n//             <img \n//               src={product.image} \n//               alt={product.name}\n//               className=\"w-full h-48 object-cover\"\n//             />\n//             <div className=\"p-4\">\n//               <div className=\"flex justify-between items-start mb-2\">\n//                 <h3 className=\"text-lg font-semibold text-gray-900\">{product.name}</h3>\n//                 <span className=\"bg-green-100 text-green-800 text-xs px-2 py-1 rounded-full\">\n//                   {product.stock} in stock\n//                 </span>\n//               </div>\n//               <p className=\"text-gray-600 text-sm mb-3\">{product.description}</p>\n//               <div className=\"flex justify-between items-center\">\n//                 <span className=\"text-xl font-bold text-blue-600\">${product.price}</span>\n//                 <div className=\"space-x-2\">\n//                   <button\n//                     onClick={() => handleEdit(product)}\n//                     className=\"text-blue-600 hover:text-blue-900 text-sm font-medium\"\n//                   >\n//                     Edit\n//                   </button>\n//                   <button\n//                     onClick={() => handleDelete(product._id)}\n//                     className=\"text-red-600 hover:text-red-900 text-sm font-medium\"\n//                   >\n//                     Delete\n//                   </button>\n//                 </div>\n//               </div>\n//             </div>\n//           </div>\n//         ))}\n//       </div>\n\n//       {/* Modal */}\n//       {showModal && (\n//         <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50\">\n//           <div className=\"bg-white rounded-xl shadow-2xl max-w-md w-full\">\n//             <div className=\"p-6\">\n//               <h2 className=\"text-xl font-bold mb-4\">\n//                 {editingProduct ? 'Edit Product' : 'Add New Product'}\n//               </h2>\n\n//               <form onSubmit={handleSubmit} className=\"space-y-4\">\n//                 <div>\n//                   <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n//                     Product Name\n//                   </label>\n//                   <input\n//                     type=\"text\"\n//                     value={formData.name}\n//                     onChange={(e) => setFormData({...formData, name: e.target.value})}\n//                     className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n//                     required\n//                   />\n//                 </div>\n\n//                 <div>\n//                   <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n//                     Price\n//                   </label>\n//                   <input\n//                     type=\"number\"\n//                     value={formData.price}\n//                     onChange={(e) => setFormData({...formData, price: e.target.value})}\n//                     className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n//                     required\n//                   />\n//                 </div>\n\n//                 <div>\n//                   <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n//                     Description\n//                   </label>\n//                   <textarea\n//                     value={formData.description}\n//                     onChange={(e) => setFormData({...formData, description: e.target.value})}\n//                     rows={3}\n//                     className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n//                   />\n//                 </div>\n\n//                 <div>\n//                   <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n//                     Image URL\n//                   </label>\n//                   <input\n//                     type=\"url\"\n//                     value={formData.image}\n//                     onChange={(e) => setFormData({...formData, image: e.target.value})}\n//                     className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n//                   />\n//                 </div>\n\n//                 <div className=\"flex space-x-3 pt-4\">\n//                   <button\n//                     type=\"button\"\n//                     onClick={() => {\n//                       setShowModal(false);\n//                       setEditingProduct(null);\n//                       setFormData({ name: '', price: '', description: '', image: '', category: '' });\n//                     }}\n//                     className=\"flex-1 px-4 py-2 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 transition duration-200\"\n//                   >\n//                     Cancel\n//                   </button>\n//                   <button\n//                     type=\"submit\"\n//                     className=\"flex-1 px-4 py-2 bg-gradient-to-r from-blue-600 to-purple-600 text-white rounded-lg hover:from-blue-700 hover:to-purple-700 transition duration-200\"\n//                   >\n//                     {editingProduct ? 'Update' : 'Create'} Product\n//                   </button>\n//                 </div>\n//               </form>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default Products;","map":{"version":3,"names":[],"sources":["D:/MERNSTACK/jewellery-app/admin-dashboard/src/pages/Products.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n\r\n// function Products() {\r\n//   const [products, setProducts] = useState([]);\r\n//   const [showModal, setShowModal] = useState(false);\r\n//   const [editingProduct, setEditingProduct] = useState(null);\r\n//   const [formData, setFormData] = useState({\r\n//     name: '',\r\n//     price: '',\r\n//     description: '',\r\n//     image: '',\r\n//     category: ''\r\n//   });\r\n//   const [loading, setLoading] = useState(true);\r\n\r\n//   // Mock data - replace with actual API calls\r\n//   useEffect(() => {\r\n//     const mockProducts = [\r\n//       {\r\n//         _id: '1',\r\n//         name: 'Diamond Ring',\r\n//         price: 2999.99,\r\n//         description: 'Beautiful diamond engagement ring',\r\n//         image: 'https://images.unsplash.com/photo-1605100804763-247f67b3557e?w=150',\r\n//         category: 'Rings',\r\n//         stock: 15\r\n//       },\r\n//       {\r\n//         _id: '2',\r\n//         name: 'Gold Necklace',\r\n//         price: 1599.50,\r\n//         description: 'Elegant gold necklace',\r\n//         image: 'https://images.unsplash.com/photo-1599643478518-a784e5dc4c8f?w=150',\r\n//         category: 'Necklaces',\r\n//         stock: 8\r\n//       }\r\n//     ];\r\n    \r\n//     setProducts(mockProducts);\r\n//     setLoading(false);\r\n//   }, []);\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     // Mock save - replace with actual API call\r\n//     if (editingProduct) {\r\n//       setProducts(products.map(p => p._id === editingProduct._id ? \r\n//         { ...formData, _id: editingProduct._id } : p));\r\n//     } else {\r\n//       const newProduct = { ...formData, _id: Date.now().toString() };\r\n//       setProducts([...products, newProduct]);\r\n//     }\r\n//     setShowModal(false);\r\n//     setEditingProduct(null);\r\n//     setFormData({ name: '', price: '', description: '', image: '', category: '' });\r\n//   };\r\n\r\n//   const handleEdit = (product) => {\r\n//     setEditingProduct(product);\r\n//     setFormData({\r\n//       name: product.name,\r\n//       price: product.price,\r\n//       description: product.description,\r\n//       image: product.image,\r\n//       category: product.category\r\n//     });\r\n//     setShowModal(true);\r\n//   };\r\n\r\n//   const handleDelete = async (id) => {\r\n//     if (window.confirm('Are you sure you want to delete this product?')) {\r\n//       setProducts(products.filter(p => p._id !== id));\r\n//     }\r\n//   };\r\n\r\n//   if (loading) {\r\n//     return (\r\n//       <div className=\"flex items-center justify-center h-64\">\r\n//         <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600\"></div>\r\n//       </div>\r\n//     );\r\n//   }\r\n\r\n//   return (\r\n//     <div className=\"p-6\">\r\n//       <div className=\"flex justify-between items-center mb-6\">\r\n//         <h1 className=\"text-2xl font-bold text-gray-900\">Products Management</h1>\r\n//         <button\r\n//           onClick={() => setShowModal(true)}\r\n//           className=\"bg-gradient-to-r from-blue-600 to-purple-600 text-white px-4 py-2 rounded-lg hover:from-blue-700 hover:to-purple-700 transition duration-200\"\r\n//         >\r\n//           Add New Product\r\n//         </button>\r\n//       </div>\r\n\r\n//       <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n//         {products.map(product => (\r\n//           <div key={product._id} className=\"bg-white rounded-xl shadow-sm overflow-hidden hover:shadow-md transition duration-200\">\r\n//             <img \r\n//               src={product.image} \r\n//               alt={product.name}\r\n//               className=\"w-full h-48 object-cover\"\r\n//             />\r\n//             <div className=\"p-4\">\r\n//               <div className=\"flex justify-between items-start mb-2\">\r\n//                 <h3 className=\"text-lg font-semibold text-gray-900\">{product.name}</h3>\r\n//                 <span className=\"bg-green-100 text-green-800 text-xs px-2 py-1 rounded-full\">\r\n//                   {product.stock} in stock\r\n//                 </span>\r\n//               </div>\r\n//               <p className=\"text-gray-600 text-sm mb-3\">{product.description}</p>\r\n//               <div className=\"flex justify-between items-center\">\r\n//                 <span className=\"text-xl font-bold text-blue-600\">${product.price}</span>\r\n//                 <div className=\"space-x-2\">\r\n//                   <button\r\n//                     onClick={() => handleEdit(product)}\r\n//                     className=\"text-blue-600 hover:text-blue-900 text-sm font-medium\"\r\n//                   >\r\n//                     Edit\r\n//                   </button>\r\n//                   <button\r\n//                     onClick={() => handleDelete(product._id)}\r\n//                     className=\"text-red-600 hover:text-red-900 text-sm font-medium\"\r\n//                   >\r\n//                     Delete\r\n//                   </button>\r\n//                 </div>\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n//         ))}\r\n//       </div>\r\n\r\n//       {/* Modal */}\r\n//       {showModal && (\r\n//         <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50\">\r\n//           <div className=\"bg-white rounded-xl shadow-2xl max-w-md w-full\">\r\n//             <div className=\"p-6\">\r\n//               <h2 className=\"text-xl font-bold mb-4\">\r\n//                 {editingProduct ? 'Edit Product' : 'Add New Product'}\r\n//               </h2>\r\n              \r\n//               <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n//                 <div>\r\n//                   <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n//                     Product Name\r\n//                   </label>\r\n//                   <input\r\n//                     type=\"text\"\r\n//                     value={formData.name}\r\n//                     onChange={(e) => setFormData({...formData, name: e.target.value})}\r\n//                     className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\r\n//                     required\r\n//                   />\r\n//                 </div>\r\n                \r\n//                 <div>\r\n//                   <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n//                     Price\r\n//                   </label>\r\n//                   <input\r\n//                     type=\"number\"\r\n//                     value={formData.price}\r\n//                     onChange={(e) => setFormData({...formData, price: e.target.value})}\r\n//                     className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\r\n//                     required\r\n//                   />\r\n//                 </div>\r\n                \r\n//                 <div>\r\n//                   <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n//                     Description\r\n//                   </label>\r\n//                   <textarea\r\n//                     value={formData.description}\r\n//                     onChange={(e) => setFormData({...formData, description: e.target.value})}\r\n//                     rows={3}\r\n//                     className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\r\n//                   />\r\n//                 </div>\r\n                \r\n//                 <div>\r\n//                   <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n//                     Image URL\r\n//                   </label>\r\n//                   <input\r\n//                     type=\"url\"\r\n//                     value={formData.image}\r\n//                     onChange={(e) => setFormData({...formData, image: e.target.value})}\r\n//                     className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\r\n//                   />\r\n//                 </div>\r\n                \r\n//                 <div className=\"flex space-x-3 pt-4\">\r\n//                   <button\r\n//                     type=\"button\"\r\n//                     onClick={() => {\r\n//                       setShowModal(false);\r\n//                       setEditingProduct(null);\r\n//                       setFormData({ name: '', price: '', description: '', image: '', category: '' });\r\n//                     }}\r\n//                     className=\"flex-1 px-4 py-2 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 transition duration-200\"\r\n//                   >\r\n//                     Cancel\r\n//                   </button>\r\n//                   <button\r\n//                     type=\"submit\"\r\n//                     className=\"flex-1 px-4 py-2 bg-gradient-to-r from-blue-600 to-purple-600 text-white rounded-lg hover:from-blue-700 hover:to-purple-700 transition duration-200\"\r\n//                   >\r\n//                     {editingProduct ? 'Update' : 'Create'} Product\r\n//                   </button>\r\n//                 </div>\r\n//               </form>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Products;"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
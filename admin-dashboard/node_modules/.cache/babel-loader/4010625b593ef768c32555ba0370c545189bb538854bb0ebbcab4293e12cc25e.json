{"ast":null,"code":"// import React, { useState, useEffect } from 'react';\n// import { Container, Table, Badge, Button } from 'react-bootstrap';\n// import axios from 'axios';\n\n// function Orders() {\n//   const [orders, setOrders] = useState([]);\n\n//   useEffect(() => {\n//     fetchOrders();\n//   }, []);\n\n//   const fetchOrders = async () => {\n//     try {\n//       const token = localStorage.getItem('adminToken');\n//       const response = await axios.get('/api/admin/orders', {\n//         headers: { Authorization: `Bearer ${token}` }\n//       });\n//       setOrders(response.data);\n//     } catch (error) {\n//       console.error('Error fetching orders:', error);\n//     }\n//   };\n\n//   const getStatusVariant = (status) => {\n//     switch (status) {\n//       case 'pending': return 'warning';\n//       case 'processing': return 'info';\n//       case 'shipped': return 'primary';\n//       case 'delivered': return 'success';\n//       case 'cancelled': return 'danger';\n//       default: return 'secondary';\n//     }\n//   };\n\n//   const updateOrderStatus = async (orderId, status) => {\n//     try {\n//       const token = localStorage.getItem('adminToken');\n//       await axios.put(`/api/admin/orders/${orderId}`, { status }, {\n//         headers: { Authorization: `Bearer ${token}` }\n//       });\n//       fetchOrders(); // Refresh orders\n//     } catch (error) {\n//       console.error('Error updating order:', error);\n//     }\n//   };\n\n//   return (\n//     <Container>\n//       <h2 className=\"mb-4\">Orders Management</h2>\n//       <Table striped bordered hover>\n//         <thead>\n//           <tr>\n//             <th>Order ID</th>\n//             <th>Customer</th>\n//             <th>Date</th>\n//             <th>Total</th>\n//             <th>Status</th>\n//             <th>Actions</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {orders.map(order => (\n//             <tr key={order._id}>\n//               <td>{order._id}</td>\n//               <td>{order.user?.name}</td>\n//               <td>{new Date(order.createdAt).toLocaleDateString()}</td>\n//               <td>${order.totalAmount}</td>\n//               <td>\n//                 <Badge bg={getStatusVariant(order.status)}>\n//                   {order.status}\n//                 </Badge>\n//               </td>\n//               <td>\n//                 <Button \n//                   variant=\"outline-primary\" \n//                   size=\"sm\"\n//                   onClick={() => updateOrderStatus(order._id, 'processing')}\n//                   disabled={order.status !== 'pending'}\n//                 >\n//                   Process\n//                 </Button>\n//                 <Button \n//                   variant=\"outline-success\" \n//                   size=\"sm\" \n//                   className=\"ms-1\"\n//                   onClick={() => updateOrderStatus(order._id, 'shipped')}\n//                   disabled={order.status !== 'processing'}\n//                 >\n//                   Ship\n//                 </Button>\n//                 <Button \n//                   variant=\"outline-info\" \n//                   size=\"sm\" \n//                   className=\"ms-1\"\n//                   onClick={() => updateOrderStatus(order._id, 'delivered')}\n//                   disabled={order.status !== 'shipped'}\n//                 >\n//                   Deliver\n//                 </Button>\n//               </td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </Table>\n//     </Container>\n//   );\n// }\n\n// export default Orders;","map":{"version":3,"names":[],"sources":["D:/MERNSTACK/jewellery-app/admin-dashboard/src/pages/Orders.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import { Container, Table, Badge, Button } from 'react-bootstrap';\r\n// import axios from 'axios';\r\n\r\n// function Orders() {\r\n//   const [orders, setOrders] = useState([]);\r\n\r\n//   useEffect(() => {\r\n//     fetchOrders();\r\n//   }, []);\r\n\r\n//   const fetchOrders = async () => {\r\n//     try {\r\n//       const token = localStorage.getItem('adminToken');\r\n//       const response = await axios.get('/api/admin/orders', {\r\n//         headers: { Authorization: `Bearer ${token}` }\r\n//       });\r\n//       setOrders(response.data);\r\n//     } catch (error) {\r\n//       console.error('Error fetching orders:', error);\r\n//     }\r\n//   };\r\n\r\n//   const getStatusVariant = (status) => {\r\n//     switch (status) {\r\n//       case 'pending': return 'warning';\r\n//       case 'processing': return 'info';\r\n//       case 'shipped': return 'primary';\r\n//       case 'delivered': return 'success';\r\n//       case 'cancelled': return 'danger';\r\n//       default: return 'secondary';\r\n//     }\r\n//   };\r\n\r\n//   const updateOrderStatus = async (orderId, status) => {\r\n//     try {\r\n//       const token = localStorage.getItem('adminToken');\r\n//       await axios.put(`/api/admin/orders/${orderId}`, { status }, {\r\n//         headers: { Authorization: `Bearer ${token}` }\r\n//       });\r\n//       fetchOrders(); // Refresh orders\r\n//     } catch (error) {\r\n//       console.error('Error updating order:', error);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <Container>\r\n//       <h2 className=\"mb-4\">Orders Management</h2>\r\n//       <Table striped bordered hover>\r\n//         <thead>\r\n//           <tr>\r\n//             <th>Order ID</th>\r\n//             <th>Customer</th>\r\n//             <th>Date</th>\r\n//             <th>Total</th>\r\n//             <th>Status</th>\r\n//             <th>Actions</th>\r\n//           </tr>\r\n//         </thead>\r\n//         <tbody>\r\n//           {orders.map(order => (\r\n//             <tr key={order._id}>\r\n//               <td>{order._id}</td>\r\n//               <td>{order.user?.name}</td>\r\n//               <td>{new Date(order.createdAt).toLocaleDateString()}</td>\r\n//               <td>${order.totalAmount}</td>\r\n//               <td>\r\n//                 <Badge bg={getStatusVariant(order.status)}>\r\n//                   {order.status}\r\n//                 </Badge>\r\n//               </td>\r\n//               <td>\r\n//                 <Button \r\n//                   variant=\"outline-primary\" \r\n//                   size=\"sm\"\r\n//                   onClick={() => updateOrderStatus(order._id, 'processing')}\r\n//                   disabled={order.status !== 'pending'}\r\n//                 >\r\n//                   Process\r\n//                 </Button>\r\n//                 <Button \r\n//                   variant=\"outline-success\" \r\n//                   size=\"sm\" \r\n//                   className=\"ms-1\"\r\n//                   onClick={() => updateOrderStatus(order._id, 'shipped')}\r\n//                   disabled={order.status !== 'processing'}\r\n//                 >\r\n//                   Ship\r\n//                 </Button>\r\n//                 <Button \r\n//                   variant=\"outline-info\" \r\n//                   size=\"sm\" \r\n//                   className=\"ms-1\"\r\n//                   onClick={() => updateOrderStatus(order._id, 'delivered')}\r\n//                   disabled={order.status !== 'shipped'}\r\n//                 >\r\n//                   Deliver\r\n//                 </Button>\r\n//               </td>\r\n//             </tr>\r\n//           ))}\r\n//         </tbody>\r\n//       </Table>\r\n//     </Container>\r\n//   );\r\n// }\r\n\r\n// export default Orders;"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"// import React, { useState, useEffect } from 'react';\n// import { Container, Table, Badge } from 'react-bootstrap';\n// import axios from 'axios';\n\n// function Users() {\n//   const [users, setUsers] = useState([]);\n\n//   useEffect(() => {\n//     fetchUsers();\n//   }, []);\n\n//   const fetchUsers = async () => {\n//     try {\n//       const token = localStorage.getItem('adminToken');\n//       const response = await axios.get('/api/admin/users', {\n//         headers: { Authorization: `Bearer ${token}` }\n//       });\n//       setUsers(response.data);\n//     } catch (error) {\n//       console.error('Error fetching users:', error);\n//     }\n//   };\n\n//   return (\n//     <Container>\n//       <h2 className=\"mb-4\">Users Management</h2>\n//       <Table striped bordered hover>\n//         <thead>\n//           <tr>\n//             <th>Name</th>\n//             <th>Email</th>\n//             <th>Role</th>\n//             <th>Joined</th>\n//             <th>Status</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {users.map(user => (\n//             <tr key={user._id}>\n//               <td>{user.name}</td>\n//               <td>{user.email}</td>\n//               <td>\n//                 <Badge bg={user.role === 'admin' ? 'danger' : 'secondary'}>\n//                   {user.role}\n//                 </Badge>\n//               </td>\n//               <td>{new Date(user.createdAt).toLocaleDateString()}</td>\n//               <td>\n//                 <Badge bg={user.isActive ? 'success' : 'warning'}>\n//                   {user.isActive ? 'Active' : 'Inactive'}\n//                 </Badge>\n//               </td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </Table>\n//     </Container>\n//   );\n// }\n\n// export default Users;","map":{"version":3,"names":[],"sources":["D:/MERNSTACK/jewellery-app/admin-dashboard/src/pages/Users.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import { Container, Table, Badge } from 'react-bootstrap';\r\n// import axios from 'axios';\r\n\r\n// function Users() {\r\n//   const [users, setUsers] = useState([]);\r\n\r\n//   useEffect(() => {\r\n//     fetchUsers();\r\n//   }, []);\r\n\r\n//   const fetchUsers = async () => {\r\n//     try {\r\n//       const token = localStorage.getItem('adminToken');\r\n//       const response = await axios.get('/api/admin/users', {\r\n//         headers: { Authorization: `Bearer ${token}` }\r\n//       });\r\n//       setUsers(response.data);\r\n//     } catch (error) {\r\n//       console.error('Error fetching users:', error);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <Container>\r\n//       <h2 className=\"mb-4\">Users Management</h2>\r\n//       <Table striped bordered hover>\r\n//         <thead>\r\n//           <tr>\r\n//             <th>Name</th>\r\n//             <th>Email</th>\r\n//             <th>Role</th>\r\n//             <th>Joined</th>\r\n//             <th>Status</th>\r\n//           </tr>\r\n//         </thead>\r\n//         <tbody>\r\n//           {users.map(user => (\r\n//             <tr key={user._id}>\r\n//               <td>{user.name}</td>\r\n//               <td>{user.email}</td>\r\n//               <td>\r\n//                 <Badge bg={user.role === 'admin' ? 'danger' : 'secondary'}>\r\n//                   {user.role}\r\n//                 </Badge>\r\n//               </td>\r\n//               <td>{new Date(user.createdAt).toLocaleDateString()}</td>\r\n//               <td>\r\n//                 <Badge bg={user.isActive ? 'success' : 'warning'}>\r\n//                   {user.isActive ? 'Active' : 'Inactive'}\r\n//                 </Badge>\r\n//               </td>\r\n//             </tr>\r\n//           ))}\r\n//         </tbody>\r\n//       </Table>\r\n//     </Container>\r\n//   );\r\n// }\r\n\r\n// export default Users;"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}